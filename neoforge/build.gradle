plugins {
    id 'idea'
    id 'java-library'
    id 'net.neoforged.moddev' version '2.0.42-beta'
}

version = "${version}-neoforge"
base.archivesName = mod_id

neoForge {
    version = neoforge_version

    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers = at
    }
    runs {
        configureEach {
            systemProperty 'neoforge.enabledGameTestNamespaces', mod_id
        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    compileOnly project(":common")
}

def resourceTargets = ['META-INF/neoforge.mods.toml', 'pack.mcmeta']
def replaceProperties = [
        mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: version,
        mod_author: mod_author, mod_description: mod_description,
        mod_url: mod_url, mod_issues: mod_issues, side: neoforge_side
]

processResources {
    inputs.properties replaceProperties
    filesMatching(resourceTargets) {
        expand replaceProperties
    }
    from project(":common").sourceSets.main.resources
}